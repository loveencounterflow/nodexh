{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/main.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n############################################################################################################\n############################################################################################################\n############################################################################################################\n### see https://medium.com/@nodejs/source-maps-in-node-js-482872b56116\n############################################################################################################\n############################################################################################################\n############################################################################################################\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'nodexh'\nlog                       = CND.get_logger 'plain',     badge\ndebug                     = CND.get_logger 'debug',     badge\ninfo                      = CND.get_logger 'info',      badge\nwarn                      = CND.get_logger 'warn',      badge\nalert                     = CND.get_logger 'alert',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n# stackman                  = ( require 'stackman' )()\nget_error_callsites       = require 'error-callsites'\nload_source_map           = ( require 'util' ).promisify ( require 'load-source-map' )\nFS                        = require 'fs'\nPATH                      = require 'path'\n{ red\n  green\n  steel\n  grey\n  cyan\n  bold\n  gold\n  white\n  yellow\n  reverse\n  underline\n  bold }                  = CND\n# types                     = new ( require '../../intertype' ).Intertype()\n# { isa }                   = types.export()\n\n#-----------------------------------------------------------------------------------------------------------\nwrite_to_stderr = ( P... ) -> process.stderr.write ' ' + CND.pen P...\n\n#-----------------------------------------------------------------------------------------------------------\nfetch_mapped_location = ( path, linenr, colnr ) ->\n  try\n    sourcemap = await load_source_map path\n    smp       = sourcemap.originalPositionFor { line: linenr, column: colnr, }\n  catch error\n    warn '^7763-3^', \"!!!!!!!!!!!!!!!!!\", error.message\n    return { path, linenr, colnr, }\n  #.........................................................................................................\n  if ( smp? ) and ( smp.source? ) and ( smp.source isnt '' ) and ( smp.line? ) and ( smp.column? )\n    mapped_path = PATH.join ( PATH.dirname path ), smp.source\n    return { path: mapped_path, linenr: smp.line, colnr: smp.column, }\n  #.........................................................................................................\n  return { path, linenr, colnr, }\n\n#-----------------------------------------------------------------------------------------------------------\nget_context = ( path, linenr, colnr, width ) ->\n  #.........................................................................................................\n  try\n    lines     = ( FS.readFileSync path, { encoding: 'utf-8' } ).split '\\n'\n    delta     = 1\n    coldelta  = 5\n    ### TAINT use more meaningful limit like n times the terminal width, assuming default of 100 ###\n    # effect    = underline\n    # effect    = bold\n    effect    = reverse\n    first_idx = Math.max 0, linenr - 1 - delta\n    last_idx  = Math.min lines.length - 1, linenr - 1 + delta\n    R         = []\n    for line, idx in lines[ first_idx .. last_idx ]\n      this_linenr     = first_idx + idx + 1\n      this_linenr_txt = ( this_linenr.toString().padStart 4 ) + 'â”‚ '\n      if this_linenr is linenr\n        c0      = colnr - 1\n        c1      = colnr + coldelta\n        hilite  = effect line[ c0 ... c1 ]\n        line    = line[ ... c0 ] + hilite + line[ c1 .. ]\n        if c1 > width\n          width2  = Math.floor width / 2\n          line    = '... ' + line[ c1 - width2 .. c1 + hilite.length - ( c1 - c0 ) + width2 ] + ' ...'\n        else\n          line  = line[ .. width ]\n        R.push  \"#{grey this_linenr_txt}#{cyan line}\"\n      else\n        R.push  \"#{grey this_linenr_txt}#{grey line}\"\n    # R = R.join '\\n'\n  catch error\n    throw error unless error.code is 'ENOENT'\n    # return [ ( red \"!!! #{rpr error.message} !!!\" ), ]\n    return []\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\nshow_error_with_source_context = ( error, headline ) ->\n  ### From https://github.com/watson/stackman#gotchas: \"This module works because V8 (the JavaScript engine\n      behind Node.js) allows us to hook into the stack trace generator function before that stack trace is\n      generated. It's triggered by accessing the .stack property on the Error object, so please don't do\n      that before parsing the error to stackman, else this will not work!\" ###\n  arrowhead   = white 'â–²'\n  arrowshaft  = white 'â”‚'\n  width       = process.stdout.columns\n  #.........................................................................................................\n  for callsite in ( get_error_callsites error ).reverse()\n    path = callsite.getFileName()\n    #.......................................................................................................\n    unless path?\n      write_to_stderr grey 'â€”'.repeat 108\n      continue\n    #.......................................................................................................\n    linenr      = callsite.getLineNumber()\n    colnr       = callsite.getColumnNumber()\n    #.......................................................................................................\n    if path.startsWith 'internal/'\n      write_to_stderr arrowhead, grey \"#{path} ##{linenr}\"\n      continue\n    #.......................................................................................................\n    # debug '^344463^', { relpath, linenr, colnr, }\n    # write_to_stderr()\n    # write_to_stderr steel bold reverse ( \"#{relpath} ##{linenr}:\" ).padEnd 108\n    { path\n      linenr\n      colnr   } = await fetch_mapped_location path, linenr, colnr\n    relpath     = PATH.relative process.cwd(), path\n    write_to_stderr arrowhead, gold ( \"#{relpath} @ #{linenr},#{colnr}: \\x1b[38;05;234m\".padEnd width, 'â€”' )\n    for context_line in await get_context path, linenr, colnr, width\n      write_to_stderr arrowshaft, context_line\n  alert '^77765^', reverse bold headline\n  # if error?.message?\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\nexit_handler = ( error ) ->\n  message             = ' EXCEPTION: ' + ( error?.message ? \"an unrecoverable condition occurred\" )\n  # if stack = error?.where ? error?.stack ? null\n  #.........................................................................................................\n  await show_error_with_source_context error, message\n  # setImmediate ( -> process.exit 111 )\n  # process.exit 111\n  return null\n\n\n\n############################################################################################################\nunless global[ Symbol.for 'cnd-exception-handler' ]?\n  global[ Symbol.for 'cnd-exception-handler' ] = true\n  process.on 'uncaughtException',  exit_handler\n  process.on 'unhandledRejection', exit_handler\n\n###\ncallsite.getThis() - returns the value of this\ncallsite.getTypeName() - returns the type of this as a string. This is the name of the function stored in the constructor field of this, if available, otherwise the object's [[Class]] internal property.\ncallsite.getFunction() - returns the current function\ncallsite.getFunctionName() - returns the name of the current function, typically its name property. If a name property is not available an attempt will be made to try to infer a name from the function's context.\ncallsite.getMethodName() - returns the name of the property of this or one of its prototypes that holds the current function\ncallsite.getFileName() - if this function was defined in a script returns the name of the script\ncallsite.getLineNumber() - if this function was defined in a script returns the current line number\ncallsite.getColumnNumber() - if this function was defined in a script returns the current column number\ncallsite.getEvalOrigin() - if this function was created using a call to eval returns a CallSite object representing the location where eval was called\ncallsite.isToplevel() - is this a toplevel invocation, that is, is this the global object?\ncallsite.isEval() - does this call take place in code defined by a call to eval?\ncallsite.isNative() - is this call in native V8 code?\ncallsite.isConstructor() - is this a constructor c\n###\n\n"
  ]
}